package acon;

public class L05Object {
    int a;
    public void print(){
        System.out.println(this.a);
    }
    static int b; //L05Object.b 정적멤버는 클래스의 이름만 사용
    Object o = new Object();

    //변수      : 데이터(기본형+자료형)를 계속 할당(참조)할수 있는 것
    //상수       :최초에 참조한 데이터가 바뀌지 않는 것
    //지역변수 : 전역이 아닌 스코프에 (메소드, 제어문, 반복문과 같은 블럭{}) 존재하는 변수
    //전역변수 : 해당 타입이(class) 객체가 되었을때 .으로 참조할 수 있는 것
    //매개변수(파라미터) : 생성자나 메소드를 실행할떄 제공하는 데이터

    //메모리 영역
    //힙 : 인스턴스 객체가 생성되는 곳 (포인터를 사라지게 함) , 가비지컬렉션이 사용하지 않는 객체를 자동으로 지운다.
    //스택(call Stack) : 작업(main 에 작성한 코드)에 필요한 메모리 공간으로(메소드 단위) 스택에 스케쥴링한다.
    //메소드 : jvm이 실행되면서 사용되는 class를 분석해서 메소드 영역에 저장하는데 이때 static으로 선언된 정적 멤버를 같이 생성한다.(GC x)

    //static 과 정적 멤버(클래스 변수)
    //최초에 메소드 영역에 생성되기 때문에 객체 생성없이 참조 가능하고 자동 삭제되지않고 남는다.
    //주의 : 너무 많이 선언하면 안됨. 초기화를 하지 않기 때문에 기대했던 값이 아닐수 있다???(상수로 선언하는 편)


    public static void main(String[] args) {
        //main 함수 정적 멤버기 때문에 (L05Object의 필드가 아니기 때문에) this를 사용할 수 없다.

        int i=0; //기본형 type은 class가 아니다!

//        this.a = 0;

        //class, 자료형 타입, 타입, 객체의 타입
        //필드(Field), 속성(Attribute),멤버 //전체영역에 선언된 것들(static 제외)
        //객체, 오브젝트(object), 데이터(잘 사용하지 않는다), 인스턴스 //new 연산자로 해당 클래스의 생성자를 호출 했을때 반환하는것
        //this : 필드 접근자 // 해당 클래스가 객체가 되었을 때
        //class Object : 개발자가 타입을 명시하고 객체를 생성할 수 있도록하는 최초의 설계 , 모든 타입의 조상 부모

        //메소드 : 재사용할 실행의 집합으로 매개변수에 의해 실행을 제어하고 결과를 반환할 수 있다.
        //생성자 : 객체 생성시 호출되는 생성자는 매개변수 필드를 초기화(첫세팅)할 수 있다.
        // 객체를 생성할때 호출되고 필드를 초기화 한다. (new 연산자가 객체를 생성, 생성자가 이미 반환하는 타입의 이름을 하고 있기 때문에)

    }
}
